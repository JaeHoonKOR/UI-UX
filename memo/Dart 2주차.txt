Dart 비동기 처리

void main() {
checkVersion();
  print('end process');
}

Future checkVersion() async{
  var version =await lookUpVersion();
  print(version);
}

int lookUpVersion(){
  return 12;
}


출력
 end process
12

checkVersion() 함수는 비동기 함수로, 
await lookUpVersion() 구문을 실행하면 
lookUpVersion() 함수의 반환값이 도착할 때까지 함수 실행을 일시 중지하고,
 해당 값이 도착하면 실행을 재개합니다

이 때, Dart는 비동기 함수에서 대기하는 동안 
다른 작업을 수행할 수 있기 때문에, 
대기하는 동안 print('end process') 구문이 실행

-->>
즉, await lookUpVersion() 구문을 실행하는 동안
 checkVersion() 함수는 일시 중지되고,
 main() 함수는 다음 구문인 print('end process')을 실행합니다

 이후, lookUpVersion() 함수에서 반환값이 도착하면
  checkVersion() 함수는 해당 값을 출력하고 실행을 종료



await 키워드를 사용하면 비동기 함수에서 다른 작업을 수행하다가 
특정 작업이 완료되었을 때 결과를 받아올 수 있습니다. 


















